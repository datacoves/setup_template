# 10_integrate_airflow_changes.yml
name: ðŸŽ¯ Airflow Validations

permissions: write-all

on:  # yamllint disable-line rule:truthy
  pull_request:
    paths:
      - {{ airflow_artifacts_path }}/*
      - {{ airflow_artifacts_path }}/**/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# This cancels a run if another change is pushed to the same branch
concurrency:
  {% raw %}group: orchestrate-${{ github.ref }}{%endraw%}
  cancel-in-progress: true

jobs:
  airflow:
    name: Pull Request Airflow Tests
    runs-on: ubuntu-latest
    {% if 'snowflake' in dbt_adapter %}
    container: datacoves/ci-airflow-dbt-snowflake:{{datacoves_env_version}}
    {%- elif 'redshift' in dbt_adapter -%}
    container: datacoves/ci-airflow-dbt-redshift:{{datacoves_env_version}}
    {%- elif 'databricks' in dbt_adapter -%}
    container: datacoves/ci-airflow-dbt-databricks:{{datacoves_env_version}}
    {%- elif 'bigquery' in dbt_adapter -%}
    container: datacoves/ci-airflow-dbt-bigquery:{{datacoves_env_version}}
    {% endif %}

    env:
      {% raw %}AIRFLOW__CORE__DAGS_FOLDER: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{%endraw%}/{{ dags_path }}
      {% raw %}AIRFLOW__ARTIFACTS_PATH: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{%endraw%}/{{ airflow_artifacts_path }}
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: 300
      {% raw %}DATACOVES__DBT_HOME: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{%endraw%}/{{dbt_project_dir}}
      {% raw %}
      DATACOVES__REPO_PATH: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      PYTHONPATH: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      {%- endraw -%}
      FORCE_COLOR: 1
      {% raw %}OUTPUT_FILE: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{%endraw%}/test_output.md

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          {% raw %}ref: ${{ github.event.pull_request.head.sha }}{% endraw %}

      - name: Test DAGs Load time and variable usage at top level
        id: test_load_time_variables
        run: python /usr/app/test_dags.py --dag-loadtime-threshold 1 --check-variable-usage --write-output --filename "$OUTPUT_FILE"

      # if write-output is set in the prior step, the following step will run
      - name: Add PR comment of results of test_load_time_variables tests
        uses: thollander/actions-comment-pull-request@v2
        with:
          {% raw %}filePath: ${{ env.OUTPUT_FILE }}{% endraw %}
          comment_tag: Test DAGs Load time and variable usage at top level

      - name: Custom Airflow Validation Tests
        env:
          NO_COLOR: 1
        run: pytest $AIRFLOW__ARTIFACTS_PATH/test_dags/validate_dags.py --output-file "$OUTPUT_FILE"

      - name: Add PR comment of results of custom Airflow validation tests
        if: always()
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: Custom Tests
          {% raw %}
          filePath: ${{ env.OUTPUT_FILE }}
          GITHUB_TOKEN: ${{ github.token }}
          {%- endraw -%}
