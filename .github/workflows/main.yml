name: Test template

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  Test_Template_Integrity:
    env:
      DBT_PROFILES_DIR: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/generated/automate/dbt
      DATACOVES__DBT_HOME: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/generated

      DATACOVES__MAIN__ACCOUNT: ${{ vars.DATACOVES__MAIN__ACCOUNT }}

      DATACOVES__MAIN__DATABASE: ${{ vars.DATACOVES__MAIN__DATABASE }}
      DATACOVES__MAIN__SCHEMA: ${{ vars.DATACOVES__MAIN__SCHEMA }}

      DATACOVES__MAIN__ROLE: ${{ vars.DATACOVES__MAIN__ROLE }}
      DATACOVES__MAIN__WAREHOUSE: ${{ vars.DATACOVES__MAIN__WAREHOUSE }}

      DATACOVES__MAIN__USER: ${{ vars.DATACOVES__MAIN__USER }}
      DATACOVES__MAIN__PASSWORD: ${{ secrets.DATACOVES__MAIN__PASSWORD }}
    runs-on: ubuntu-latest
    container: datacoves/ci-airflow-dbt-snowflake:2

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0

      - name: Set Secure Directory
        run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ci_requirements.txt

      - name: Run Copier
        run: |
          copier --defaults -d setup_dbt_project=True -d setup_dbt_profile=True -d setup_ci_cd=True -d setup_precommit=True -d setup_airflow_dag=True -d dbt_project_dir="." -d dbt_project_name="balboa" -d is_new_project=True  -d airflow_profile_path="automate/dbt" -d yml_dags_path="orchestrate/dag_yml_definitions" -d dags_path="orchestrate/dags" -a ../copier-answers.yml copy ./ generated/

      - name: Debugging ls
        run: |
          ls -lha ./generated
          cd ./generated
          pwd
      # run dbt debug and dbt compile
      - name: Run dbt commands
        run: |
          cd ./generated
          dbt debug
          dbt compile

      # run `dbt-coves generate airflow dags`
      - name: Generate dags
        run: |
          dbt-coves generate airflow-dags --yml-path generated/orchestrate/dag_yml_definitions/sample_dag.yml --dags-path generated/orchestrate/dags

      # fill Airflow DagBag with the result of generated dags
      - name: Load dags
        run: python test_load_dagbag.py

      # run pre-commit
      - name: Run pre-commit
        run: |
          cd ./generated
          pre-commit run --all-files
